enum MilestoneStatus {
  Default
  Pending
  Approved
  Declined
}

type _Schema_
  @fulltext(
    name: "campaignSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "CampaignContent"
        fields: [{ name: "details" }, { name: "title" }]
      }
    ]
  )

type CampaignCreator @entity {
  id: ID!
  createdCampaigns: [Campaign!] @derivedFrom(field: "owner")
  fundingGiven: BigInt
  fundingWithdrawn: BigInt
}

type Campaign @entity {
  id: Bytes!
  campaignCID: String!
  category: String!
  contractAddress: ID!
  active: Boolean!
  projectDuration: BigInt
  milestone: [Milestone!] @derivedFrom(field: "campaign")
  currentMilestone: Bytes
  dateCreated: BigInt!
  campaignRunning: Boolean!
  owner: CampaignCreator!
  amountSought: BigInt!
  amountRaised: BigInt
  donors: [Donation!] @derivedFrom(field: "donatingTo")
  donorsRecall: [DonationWithdrawal!] @derivedFrom(field: "withdrawingFrom")
  content: CampaignContent @derivedFrom(field: "campaign")
}

type Milestone @entity {
  id: Bytes!
  milestoneCID: String!
  details: String
  campaign: Campaign!
  milestonestatus: MilestoneStatus!
  periodToVote: BigInt!
  dateCreated: BigInt!
  content: MilestoneContent @derivedFrom(field: "milestone")
}

type Donation @entity(immutable: true) {
  id: Bytes!
  donor: ID!
  amount: BigInt!
  donatingTo: Campaign!
  date: BigInt!
}

type DonationWithdrawal @entity(immutable: true) {
  id: Bytes!
  donor: ID!
  amount: BigInt!
  withdrawingFrom: Campaign!
  date: BigInt!
}

type CampaignContent @entity(immutable: true) {
  id: Bytes!
  campaign: Campaign!
  details: String
  title: String
  media: [String!]
  hash: String
}

type MilestoneContent @entity(immutable: true) {
  id: Bytes!
  milestone: Milestone!
  details: String
  title: String
  media: [String!]
  hash: String
}
